name: Release
on:
  workflow_dispatch:

env:
  FETCH_DEPTH: 0

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            target: x86_64-unknown-linux-gnu
            code-target: linux-x64
          - os: ubuntu-20.04
            target: aarch64-unknown-linux-gnu
            code-target: linux-arm64
            arch: aarch64
          - os: ubuntu-20.04
            target: arm-unknown-linux-gnueabihf
            code-target: linux-armhf
            arch: armv7
          - os: macos-14
            target: aarch64-apple-darwin
            code-target: darwin-arm64
          - os: ubuntu-20.04
            target: x86_64-unknown-linux-musl
            code-target: alpine-x64
            arch: x86_64
          - os: ubuntu-20.04
            target: aarch64-unknown-linux-musl
            code-target: alpine-arm64
            arch: aarch64

    name: Build (${{ matrix.target }})
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: ${{ env.FETCH_DEPTH }}
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - run: python -m pip install -t ./bundled/libs --implementation py --no-deps --upgrade -r ./requirements.txt
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Install Node dependencies
        run: npm ci
      - name: Package Extension (release)
        if: "startsWith(github.ref, 'refs/tags/')"
        run: npx vsce package -o "./dist/craft-ls-${{ matrix.code-target }}.vsix" --target ${{ matrix.code-target }}
      - name: Package Extension (nightly)
        if: "!startsWith(github.ref, 'refs/tags/')"
        run: npx vsce package -o "./dist/craft-ls-${{ matrix.code-target }}.vsix" --target ${{ matrix.code-target }} --pre-release
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.target }}
          path: ./dist

  publish-code-marketplace:
    name: "Publish (Code Marketplace)"
    needs: ["build"]
    runs-on: ubuntu-latest
    steps:
      - name: Install Nodejs
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: ${{ env.FETCH_DEPTH }}

      # Download all built artifacts.
      - uses: actions/download-artifact@v4
        with:
          name: dist-aarch64-apple-darwin
          path: dist
      - uses: actions/download-artifact@v4
        with:
          name: dist-x86_64-unknown-linux-gnu
          path: dist
      - uses: actions/download-artifact@v4
        with:
          name: dist-aarch64-unknown-linux-gnu
          path: dist
      - uses: actions/download-artifact@v4
        with:
          name: dist-arm-unknown-linux-gnueabihf
          path: dist
      - uses: actions/download-artifact@v4
        with:
          name: dist-x86_64-unknown-linux-musl
          path: dist
      - uses: actions/download-artifact@v4
        with:
          name: dist-aarch64-unknown-linux-musl
          path: dist
      - run: ls -al ./dist
      - name: Install Node dependencies
        run: npm ci
      - name: Publish Extension (Code Marketplace, release)
        if: "startsWith(github.ref, 'refs/tags/')"
        run: npx vsce publish --pat ${{ secrets.MARKETPLACE_TOKEN }} --packagePath ./dist/craft-ls-*.vsix
      - name: Publish Extension (Code Marketplace, nightly)
        if: "!startsWith(github.ref, 'refs/tags/')"
        run: npx vsce publish --pat ${{ secrets.MARKETPLACE_TOKEN }} --packagePath ./dist/craft-ls-*.vsix --pre-release
